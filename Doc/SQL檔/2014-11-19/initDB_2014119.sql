--Category--------------------------------------
CREATE TABLE CATEGORY (
CATNO number PRIMARY KEY,
CATNAME varchar2(20) NOT NULL unique
);
CREATE SEQUENCE CATEGORY_seq
INCREMENT BY 1
START WITH 1
NOMAXVALUE
NOCYCLE
NOCACHE;

--SubCategory--------------------------------------
CREATE TABLE SUBCATEGORY (
SUBCATNO number PRIMARY KEY,
SUBCATNAME varchar2(30) NOT NULL unique,
CATNO NUMBER REFERENCES CATEGORY(CATNO)
);

CREATE SEQUENCE SUBCATEGORY_seq
INCREMENT BY 1
START WITH 1
NOMAXVALUE
NOCYCLE
NOCACHE;
--Account--------------------------------------
CREATE TABLE ACCOUNT (
ACC varchar2(20) PRIMARY KEY,
NICK varchar2(30)NOT NULL,
ACCPW varchar2(20) NOT NULL,
email varchar2(30) not null
);

--Permission--------------------------------------
CREATE TABLE PERMISSION (
PERNO  NUMBER PRIMARY KEY,
PERDESC varchar2(60) not null
);
CREATE SEQUENCE PERMISSION_seq
INCREMENT BY 1
START WITH 1
NOMAXVALUE
NOCYCLE
NOCACHE;

--PerList--------------------------------------
CREATE TABLE PERLIST (
PERNO number REFERENCES PERMISSION(PERNO),
ACC varchar2(20) REFERENCES ACCOUNT(ACC),
PRIMARY KEY (PERNO,ACC) 
);


/*************************************************************************************/

--Location----------------------------
CREATE TABLE LOCATION
(  LOCNO        NUMBER UNIQUE,
   COUNTY       VARCHAR2(15) NOT NULL,
   TOWN         VARCHAR2(15) NOT NULL,
   PRIMARY KEY (COUNTY, TOWN)
);
/*
CREATE SEQUENCE location_seq
INCREMENT BY 1
START WITH 1
NOMAXVALUE
NOCYCLE
NOCACHE;*/
--Member--------------------------------
CREATE TABLE MEMBER
(  MEMNO        NUMBER NOT NULL,
   MEMID        VARCHAR2(20) UNIQUE,
   MEMPW        VARCHAR2(20) NOT NULL,
   FNAME        VARCHAR2(20),
   LNAME        VARCHAR2(20),
   IDNUM        VARCHAR2(20) NOT NULL,
   GENDER       VARCHAR2(1),
   LOCNO        NUMBER NOT NULL,
   ADDR         VARCHAR2(150) NOT NULL,
   TEL          VARCHAR2(20) NOT NULL,
   EMAIL        VARCHAR2(50) NOT NULL,
   PHOTO        BLOB,
   MIME			VARCHAR2(20),
   POINT        NUMBER Default 0 NOT NULL ,
   MONEY        NUMBER Default 0 NOT NULL check(MONEY >=0),
   ADDAYS		NUMBER NOT NULL,
   STATUS       NUMBER NOT NULL,
   TYPE         NUMBER NOT NULL,
   WITHHOLD		NUMBER Default 0 check(WITHHOLD >=0),
   PRIMARY KEY (MEMNO), 
   FOREIGN KEY(LOCNO) REFERENCES LOCATION(LOCNO)
);


CREATE SEQUENCE member_seq
INCREMENT BY 1
START WITH 1001
NOMAXVALUE
NOCYCLE
NOCACHE;

--RunningAd-------------------------------------
CREATE TABLE RUNNINGAD
(  ADNO         NUMBER NOT NULL,
   ADPIC        BLOB,
   MIME         VARCHAR2(20),
   SDATE        DATE,
   EDATE        DATE,
   MEMNO        NUMBER NOT NULL,
   REQTIME      DATE,
   TST          NUMBER NOT NULL,
   DTIME        NUMBER NOT NULL,
   PRIMARY KEY (ADNO), 
   FOREIGN KEY(MEMNO) REFERENCES MEMBER(MEMNO)
);

CREATE SEQUENCE runningad_seq
INCREMENT BY 1
START WITH 1
NOMAXVALUE
NOCYCLE
NOCACHE;


/***********************************************************************************************************/

--DpsOrd-------------------------------------------
CREATE TABLE DPSORD (
 DPSORDNO              NUMBER,
 DPSORDT               TIMESTAMP,
 DPSAMNT               NUMBER,
 MEMNO                 NUMBER,
 DPSHOW                VARCHAR2(10) NOT NULL,
 ORDSTS                VARCHAR2(9) NOT NULL,
 ATMAC                 VARCHAR2(20),
 FOREIGN KEY (MEMNO) REFERENCES MEMBER (MEMNO),
 PRIMARY KEY (DPSORDNO));
 
CREATE SEQUENCE dpsord_seq
INCREMENT BY 1
START WITH 1
NOMAXVALUE
NOCYCLE
NOCACHE;

--WtdReq-------------------------------------------
CREATE TABLE WTDREQ (
 WTDREQNO              NUMBER NOT NULL,
 WTDREQT               TIMESTAMP NOT NULL,
 MEMNO                 NUMBER,
 WTDAMNT               NUMBER NOT NULL,
 WTDAC                 VARCHAR2(20),
 REQSTS                VARCHAR2(9) NOT NULL,
 FOREIGN KEY (MEMNO) REFERENCES MEMBER (MEMNO),
 PRIMARY KEY (WTDREQNO));
 
CREATE SEQUENCE wtdreq_seq
INCREMENT BY 1
START WITH 1
NOMAXVALUE
NOCYCLE
NOCACHE;

/***********************************************************************/
--Shop----------------------------------------------
CREATE TABLE SHOP (
SHOPNO		  NUMBER				,
MEMNO		  NUMBER	       NOT NULL ,
TITLE		  VARCHAR2	(600)  NOT NULL	,
SHOP_DESC    	  CLOB 	,
PIC		      BLOB						,
MIME          VARCHAR2  (20)			,
LOCNO		  NUMBER	   NOT NULL ,
ADDR		  VARCHAR2	(4000) NOT NULL	,
LNG		      NUMBER	(10,7)         ,
LAT		      NUMBER	(10,7)        ,
PHONE		  VARCHAR2	(100)  NOT NULL	,
FAX		      VARCHAR2	(100)			,
EMAIL		  VARCHAR2	(600)  NOT NULL	,
SHIP_DESC	  VARCHAR2	(4000) ,
OTHER_DESC	  VARCHAR2	(4000) ,
HITS		  NUMBER		   DEFAULT 0	,
STATUS		  NUMBER	(1)    DEFAULT 0 NOT NULL,
PRIMARY KEY (SHOPNO),
FOREIGN KEY (MEMNO) REFERENCES MEMBER (MEMNO),
FOREIGN KEY (LOCNO) REFERENCES LOCATION (LOCNO)
);					
 
CREATE SEQUENCE SHOP_seq
INCREMENT BY 1
START WITH 2001
NOMAXVALUE
NOCYCLE
NOCACHE;

--ShopProduct----------------------------------------------
CREATE TABLE SHOPPRODUCT (								
SPNO		NUMBER,--PK
SHOPNO		NUMBER			NOT NULL,--FK
NAME		VARCHAR2(600)	NOT NULL,
UNITPRICE	NUMBER(10,2)	NOT NULL,
PIC1		BLOB,
PIC2		BLOB,
PIC3		BLOB,
PMIME1      VARCHAR2(20),
PMIME2      VARCHAR2(20),
PMIME3      VARCHAR2(20),
PRO_DESC	VARCHAR2(4000)	NOT NULL,
SUBCATNO	NUMBER			NOT NULL,--FK
SPEC1		VARCHAR2(30)	NOT NULL,
SPEC2		VARCHAR2(30),
SPEC3		VARCHAR2(30),
ISRECOMM	NUMBER(1)		NOT NULL,
PRIMARY KEY (SPNO),								
FOREIGN KEY (SHOPNO) REFERENCES SHOP (SHOPNO),								
FOREIGN KEY (SUBCATNO) REFERENCES SUBCATEGORY (SUBCATNO)								
);								

CREATE SEQUENCE ShopProduct_seq
INCREMENT BY 1
START WITH 3001
NOMAXVALUE
NOCYCLE
NOCACHE;

--ShopRep----------------------------------------------
CREATE TABLE SHOPREP (
 SREPNO              NUMBER,--PK
 SHOPNO              NUMBER NOT NULL,--FK
 REPNO               NUMBER NOT NULL,--FK
 SREPRSN             VARCHAR2(150) NOT NULL,
FOREIGN KEY (SHOPNO) REFERENCES SHOP (SHOPNO),
FOREIGN KEY (REPNO) REFERENCES MEMBER (MEMNO),
PRIMARY KEY (SREPNO));
 
CREATE SEQUENCE shoprep_seq
INCREMENT BY 1
START WITH 1
NOMAXVALUE
NOCYCLE
NOCACHE;


/***********************************************************************************/
--CaseProduct-----------------------------
CREATE TABLE CaseProduct (
  CPNO number PRIMARY KEY,--PK
  MEMNO number REFERENCES Member(memno) NOT NULL,--FK
  NAME VARCHAR(120) NOT NULL,
  UNITPRICE NUMBER(5) NOT NULL,
  PIC1 BLOB,
  PIC2 BLOB,
  PIC3 BLOB,
  PMIME1 VARCHAR2(20),
  PMIME2 VARCHAR2(20),
  PMIME3 VARCHAR2(20),
  CPDESC CLOB,
  SUBCATNO NUMBER REFERENCES SubCategory(SUBCATNO) NOT NULL,--FK
  LOCKFLAG NUMBER(5) DEFAULT 0
);
CREATE SEQUENCE caseProduct_seq
  START WITH 4001
  INCREMENT BY 1
  NOMAXVALUE
  NOCYCLE
;

--Cases-------------------------------------
CREATE TABLE cases(
  caseNo 	NUMBER 			PRIMARY KEY,--PK
  TITLE		VARCHAR2(90)	NOT NULL,
  MEMNO		NUMBER			REFERENCES Member(MEMNO) NOT NULL,--FK
  CPNO		NUMBER			REFERENCES CaseProduct(CPNO),--FK
  SPNO		NUMBER			REFERENCES ShopProduct(SPNO),--FK
  LOCNO		NUMBER			NOT NULL,
  DISCOUNT	NUMBER			NOT NULL,
  STIME		TIMESTAMP,
  ETIME		TIMESTAMP,
  MINQTY	NUMBER(3)		NOT NULL,
  MAXQTY	NUMBER(3)		NOT NULL,
  STATUS	NUMBER(2)		NOT NULL,
  HITS		NUMBER			DEFAULT 0 NOT NULL CHECK(HITS >= 0),
  CASEDESC	VARCHAR2(4000) 	NOT NULL,
  SHIP1		VARCHAR2(30)	NOT NULL,
  SHIPCOST1	NUMBER(10)		DEFAULT 0 NOT NULL CHECK(SHIPCOST1 >= 0),
  SHIP2		VARCHAR2(30),	
  SHIPCOST2	NUMBER(10) 		CHECK(SHIPCOST2 >= 0),
  THRESHOLD NUMBER 			DEFAULT 0 CHECK(THRESHOLD >= 0)	
);

CREATE SEQUENCE cases_seq
  START WITH 5001
  INCREMENT BY 1
  NOMAXVALUE
  NOCYCLE
;

--CaseRep-----------------------------------------------------------

CREATE TABLE CASEREP (
 CREPNO              NUMBER,
 REPNO               NUMBER NOT NULL,
 SUSNO               NUMBER NOT NULL,
 REPCASENO           NUMBER NOT NULL,
 CREPRSN             VARCHAR2(150) NOT NULL,
FOREIGN KEY (REPNO) REFERENCES MEMBER (MEMNO),
FOREIGN KEY (SUSNO) REFERENCES MEMBER (MEMNO),
FOREIGN KEY (REPCASENO) REFERENCES CASES (CASENO),
PRIMARY KEY (CREPNO));

CREATE SEQUENCE CaseRep_seq
INCREMENT BY 1
START WITH 1
NOMAXVALUE
NOCYCLE
NOCACHE;

--CaseQA--------------------------------------
CREATE TABLE CaseQA(
  QANO	NUMBER PRIMARY KEY,
  MEMNO	NUMBER	REFERENCES MEMBER(memNo) NOT NULL	,
  CASENO	NUMBER	REFERENCES cases(caseNo) NOT NULL	,
  QUESTION	VARCHAR2(300)		NOT NULL,	
  ANSWER	VARCHAR2(300),
  QTIME	TIMESTAMP	DEFAULT CURRENT_TIMESTAMP NOT NULL,
  ATIME	TIMESTAMP	
);
CREATE SEQUENCE caseQA_seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE
  NOCYCLE
;

--Orders---------------------
CREATE TABLE orders (
  OrdNo		NUMBER 		PRIMARY KEY, --PK
  bMemNo	NUMBER		REFERENCES member(memno) NOT NULL, --FK
  cMemNo	NUMBER		REFERENCES member(memno) NOT NULL, --FK
  caseNo	NUMBER		REFERENCES cases(caseno) NOT NULL, --FK
  qty		NUMBER(3)	NOT NULL CHECK(qty > 0),
  price		NUMBER(5)	NOT NULL CHECK(price >= 0),
  ordTime	TIMESTAMP	DEFAULT CURRENT_TIMESTAMP NOT NULL,
  status	NUMBER(2)	NOT NULL,
  bRate		NUMBER(1)   CHECK(bRate >= 0),
  bRateDesc	VARCHAR2(50),
  cRate		NUMBER(1)	CHECK(cRate >= 0),
  cRateDesc	VARCHAR2(50),
  ship		NUMBER(1)	NOT NULL
);

CREATE SEQUENCE orders_seq
  START WITH 6001
  INCREMENT BY 1
  NOMAXVALUE
  NOCYCLE
;

--WishList---------------------------------------------------
CREATE TABLE WISHLIST (
 WLNO               NUMBER NOT NULL,
 MEMNO              NUMBER,
 CASENO             NUMBER,
 FOREIGN KEY (MEMNO) REFERENCES MEMBER (MEMNO),
 FOREIGN KEY (CASENO) REFERENCES CASes (CASENO),
 PRIMARY KEY (WLNO));
 
CREATE SEQUENCE wishlist_seq
INCREMENT BY 1
START WITH 1
NOMAXVALUE
NOCYCLE
NOCACHE;



/*************************************************************************************/
--NEWS----------------------------------------------
CREATE TABLE NEWS (
 NEWSNO              NUMBER ,
 TITLE               VARCHAR2(600) NOT NULL,
 TEXT                VARCHAR2(4000)NOT NULL,
 PUBTIME             TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 CONSTRAINT NEWS_PRIMARY_KEY PRIMARY KEY (NEWSNO));
 
CREATE SEQUENCE NEWS_seq
INCREMENT BY 1
START WITH 1
NOMAXVALUE
NOCYCLE
NOCACHE;




COMMIT;